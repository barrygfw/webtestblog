/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50714
Source Host           : 127.0.0.1:3306
Source Database       : emrysblog

Target Server Type    : MYSQL
Target Server Version : 50714
File Encoding         : 65001

Date: 2018-03-18 15:47:03
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for blog_article
-- ----------------------------
DROP TABLE IF EXISTS `blog_article`;
CREATE TABLE `blog_article` (
  `id` int(15) NOT NULL AUTO_INCREMENT,
  `kind` varchar(255) DEFAULT NULL,
  `status` int(15) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_article
-- ----------------------------
INSERT INTO `blog_article` VALUES ('1', '技术', '1');
INSERT INTO `blog_article` VALUES ('2', '心情', '1');
INSERT INTO `blog_article` VALUES ('3', '游记', '1');

-- ----------------------------
-- Table structure for blog_detail
-- ----------------------------
DROP TABLE IF EXISTS `blog_detail`;
CREATE TABLE `blog_detail` (
  `id` int(100) NOT NULL AUTO_INCREMENT,
  `pid` int(10) DEFAULT NULL,
  `uid` int(10) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `introduce` varchar(255) DEFAULT NULL,
  `content` varchar(20000) DEFAULT NULL,
  `creat_time` varchar(255) DEFAULT NULL,
  `update_time` varchar(255) DEFAULT NULL,
  `status` int(10) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_detail
-- ----------------------------
INSERT INTO `blog_detail` VALUES ('1', '1', '1', 'TP5中的getField', 'TP5中的getField()方法变化，tp5获取单个字段值', '想直接获取单个字段值，弄了半天，tp5的getField()方法变了，具体如下：\r\n\r\nTP5中的getField()：拆分为value和column了\r\n\r\n例子：\r\n\r\n••• where(\"id = 1\")->value(\"title\");       输出：（string） title  \r\n\r\n••• where(\"id = 1\")->column(\"title\");     输出：（array）', null, null, '1');
INSERT INTO `blog_detail` VALUES ('2', '2', '1', '如何建立个人博客', '那么我们怎么去建立自己的自媒体博客呢？我认为：首先得先明白建立一个博客的流程是什么？只有先了解这套流程，我们才能做出自己满意的个人博客。', '一、对网站域名和空间的选择\r\n域名：一般会选择比较正规点的域名商购买，比如：万网、西部数码...（一年也才几十块钱）。考虑到我们的域名是要续费的，如果说你买的域是那种不正规的域名商，哪天域名商倒闭了，那么我的域名就不能使用了。还有一点值得注意的是:域名的选择最好“见名知意”越短越好。一般会用自己的名字来命名。比如：段亮个人博客：www.duanliang920.com\r\n空间：分为国内空间和国外空间。\r\n1、国内空间：需要备案网站才能上线，但是速度比国外空间要快一点，并且也稳定。\r\n2、国外空间：指（除大陆外的空间）则不需要备案，可以直接使用。\r\n一般我们对空间的选择有两点：第一、稳定性，第二、性价比。在这里我推荐大家可以去淘宝等商城上去买，至于空间稳不稳定这个我不知道，看自己的运气吧！\r\n空间大小个人建议：前期练手150M就够了，后期根据自己个人需要来选择空间大小。二、选择网站后台系统\r\n我们不需要会PHP、JSP、ASP、.NET之类的动态语言来编写网站后台，同样也可以做出一个动态网站来。因为现在有很多开源免费的CMS系统（内容管理系统）可以简单点理解成：一个可以为网站提供发布文章、图片等等一些功能的工具。\r\n那么常见的个人博客系统有哪些呢？博客后台系统的选择，取决你空间服务器是PHP的还是ASP的。\r\n空间服务器是PHP：那么我推荐你使用WordPress系统，因为WordPress最容易上手的网站程序了，程序安装5分钟搞定，就算是新手，也可以在半小时内学会搭建WordPress博客。后台傻瓜式管理，主题，插件，都可以在可视化后台按键完成，就算你不懂任何一句代码，也能轻松安装使用。\r\n空间服务器是ASP：那么我推荐你使用Z-Blog系统，程序小，运行速度快。据说著名草根站长“卢松松”的博客，也是用的这个系统。现在PHP版本也出来了，具体选择看自己爱好。\r\n当然并不只有这两款博客后台系统才可以做网站后台，也可以用其它的CMS系统比如：帝国cms、织梦cms(本人就是用的织梦，来搭建的博客网站后台)..，甚至有能力可以自己开发网站后台。只是wordpress和Z-blog这两款博客系统是非常有利于做博客，因为他们本身就是为博客而量身定做的。\r\n\r\n三、策划和设计网站效果图\r\n很多人可能会说：既然那些博客系统，都有现成的主题，那还需要自己亲自DIY设计博客的效果图吗？那是因为网上的主题鱼龙混杂的，毕竟每个人的审美观不一样，需求也不一样！所以说：想做一个自己喜欢风格的网站，还是需要自己亲自动手去设计。如果还没想好怎么去设计的朋友，我博客提供了一款比较简洁的博客模板。\r\n\r\n四、制作前台页面\r\n根据前面自己设计的效果图，然后把它制作成html的静态页面模板。方便和后台的结合，实现真正意义的动态网站。\r\n\r\n五、制作动态网站\r\n可能有些新手就会问了，网站还分静态网站和动态网站呀?为什么要实现动态网站呢？因为动态网站可以实现静态网站实现不了的功能，比如说：对网站文章的发布、图片的更新、留言等功能。\r\n\r\n六、测试以及上线\r\n在本地搭建服务器，网站上线前先测试网站有没有什么BUG。如没有什么问题，可以将本地网站解压打包，使用FTP工具上传到服务器空间。\r\n值得注意的是：先得把网站的数据库导入出来，然后在空间服务器还原。不然就会出错误哟！\r\n如果没有本地服务器测试的朋友，我这里提供了一款本地服务测试工具。请点击下载（放心使用，安全无毒！）\r\n写在最后：建立一个个人博客，其实跟建立网站流程是一样的。只有你真正的了解这套开发流程，才知道网站是怎样做出来的。\r\n', null, null, '1');
INSERT INTO `blog_detail` VALUES ('3', '1', '1', '将普通文本替换为正常HTML文本', '有时我们在textarea中输入了正常的文本内容，然而如果直接将文本取出来呈现在网页中，原本的换行和回车功能便会失效，完全丢失了原来的样式，这是因为在HTML中的空格和换行分别为&nbsp;和<br>，所以我们需要将其替换才能变成我们想要的样式。', '我们可以定义这样的一个函数，将原来的字符串替换为HTML文本。即把空格和换行替换掉即可\r\n\r\nPHP\r\n\r\nfunction htmtocode($content) { \r\n		$content = htmlspecialchars($content, ENT_QUOTES);\r\n	    $content = str_replace(\" \", \"&nbsp;\", $content); \r\n	    $content = str_replace(\"\\n\", \"<br>\",$content);    \r\n	    return $content; \r\n	}\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nfunction htmtocode($content) { \r\n        $content = htmlspecialchars($content, ENT_QUOTES);\r\n        $content = str_replace(\" \", \"&nbsp;\", $content); \r\n        $content = str_replace(\"\\n\", \"<br>\",$content);    \r\n        return $content; \r\n    }\r\n通过上述方法，我们首先将HTML的特殊标记转化，然后替换掉空格和换行即可。\r\n\r\n用法\r\n\r\n写个最简单的小例子，在textarea中输入任意的文本，存储到数据库，然后再取出来，可以实现textarea输入的效果，完全一样。\r\n\r\n数据库名称：demo\r\n\r\n数据库表：\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS `article` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `text` text NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n)\r\n1\r\n2\r\n3\r\n4\r\n5\r\nCREATE TABLE IF NOT EXISTS `article` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `text` text NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n)\r\n插入数据：\r\n\r\n插入数据\r\n\r\n<head>\r\n	<meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n	<form action=\"\" method=\"post\">\r\n		<textarea name=\"text\"></textarea>\r\n		<input type=\"submit\" name=\"sub\">\r\n	</form>\r\n</body>\r\n<?php \r\n	$con = mysql_connect(\"localhost\", \"root\", \"\");\r\n	if (!$con) {\r\n		die(\"数据库连接失败\");\r\n	} \r\n	mysql_select_db(\"demo\",$con);\r\n	mysql_query(\"set names utf8\");\r\n	$text = @$_POST[\'text\'];\r\n	$sql = \"insert into article(text) values (\'$text\')\";\r\n	echo $sql;\r\n	$result = mysql_query($sql,$con);\r\n	if ($result) {\r\n		echo \"录入成功\";\r\n	} else {\r\n		echo \"录入失败\";\r\n	}\r\n\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n25\r\n26\r\n27\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n    <form action=\"\" method=\"post\">\r\n        <textarea name=\"text\"></textarea>\r\n        <input type=\"submit\" name=\"sub\">\r\n    </form>\r\n</body>\r\n<?php \r\n    $con = mysql_connect(\"localhost\", \"root\", \"\");\r\n    if (!$con) {\r\n        die(\"数据库连接失败\");\r\n    } \r\n    mysql_select_db(\"demo\",$con);\r\n    mysql_query(\"set names utf8\");\r\n    $text = @$_POST[\'text\'];\r\n    $sql = \"insert into article(text) values (\'$text\')\";\r\n    echo $sql;\r\n    $result = mysql_query($sql,$con);\r\n    if ($result) {\r\n        echo \"录入成功\";\r\n    } else {\r\n        echo \"录入失败\";\r\n    }\r\n \r\n?>\r\n查询数据：\r\n\r\n\r\n<head>\r\n	<meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n	<form action=\"\" method=\"post\">\r\n		<textarea name=\"text\"></textarea>\r\n		<input type=\"submit\" name=\"sub\">\r\n	</form>\r\n</body>\r\n<?php \r\n	$con = mysql_connect(\"localhost\", \"root\", \"\");\r\n	if (!$con) {\r\n		die(\"数据库连接失败\");\r\n	} \r\n	mysql_select_db(\"demo\",$con);\r\n	mysql_query(\"set names utf8\");\r\n	$text = @$_POST[\'text\'];\r\n	$sql = \"select * from article\";\r\n\r\n	$result = mysql_query($sql,$con);\r\n	if ($result) {\r\n		while ($row = mysql_fetch_array($result)) {\r\n			echo htmtocode($row[\'text\']);\r\n		}\r\n	} else {\r\n		echo \"录入失败\";\r\n	}\r\n\r\n\r\n\r\n	function htmtocode($content) { \r\n		$content = htmlspecialchars($content, ENT_QUOTES);\r\n	    $content = str_replace(\" \", \"&nbsp;\", $content); \r\n	    $content = str_replace(\"\\n\", \"<br>\",$content);    \r\n	    return $content; \r\n	}\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n25\r\n26\r\n27\r\n28\r\n29\r\n30\r\n31\r\n32\r\n33\r\n34\r\n35\r\n36\r\n37\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n    <form action=\"\" method=\"post\">\r\n        <textarea name=\"text\"></textarea>\r\n        <input type=\"submit\" name=\"sub\">\r\n    </form>\r\n</body>\r\n<?php \r\n    $con = mysql_connect(\"localhost\", \"root\", \"\");\r\n    if (!$con) {\r\n        die(\"数据库连接失败\");\r\n    } \r\n    mysql_select_db(\"demo\",$con);\r\n    mysql_query(\"set names utf8\");\r\n    $text = @$_POST[\'text\'];\r\n    $sql = \"select * from article\";\r\n \r\n    $result = mysql_query($sql,$con);\r\n    if ($result) {\r\n        while ($row = mysql_fetch_array($result)) {\r\n            echo htmtocode($row[\'text\']);\r\n        }\r\n    } else {\r\n        echo \"录入失败\";\r\n    }\r\n \r\n \r\n \r\n    function htmtocode($content) { \r\n        $content = htmlspecialchars($content, ENT_QUOTES);\r\n        $content = str_replace(\" \", \"&nbsp;\", $content); \r\n        $content = str_replace(\"\\n\", \"<br>\",$content);    \r\n        return $content; \r\n    }\r\n?>\r\n嗯，通过上面的方法我们便可以正常地实现输入内容和输出内容的匹配呈现。', null, null, '1');
INSERT INTO `blog_detail` VALUES ('4', '1', '1', 'PHP高级特性八之mysqli函数库的使用', '', '1.什么是mysqli\r\n\r\nPHP-MySQL 函数库是 PHP 操作 MySQL 资料库最原始的扩展库，PHP-MySQLi 的 i 代表 Improvement ，相当于前者的增强版，也包含了相对进阶的功能，另外本身也增加了安全性，比如可以大幅度减少 SQL 注入等问题的发生。\r\n\r\n2. mysql与mysqli的概念相关\r\n\r\n（1）mysql与mysqli都是php方面的函数集，与mysql数据库关联不大。\r\n\r\n（2）在php5版本之前，一般是用php的mysql函数去驱动mysql数据库的，比如mysql_query()的函数，属于面向过程\r\n\r\n（3）在php5版本以后，增加了mysqli的函数功能，某种意义上讲，它是mysql系统函数的增强版，更稳定更高效更安全，与mysql_query()对应的有mysqli_query()，属于面向对象，用对象的方式操作驱动mysql数据库\r\n\r\n3. mysql与mysqli的主要区别\r\n\r\n（1）mysql是非持继连接函数，mysql每次链接都会打开一个连接的进程，所以mysqli耗费资源少一些。\r\n\r\n（2）mysqli是永远连接函数，mysqli多次运行mysqli将使用同一连接进程,从而减少了服务器的开销。mysqli封装了诸如事务等一些高级操作，同时封装了DB操作过程中的很多可用的方法。\r\n\r\n（3）mysqli提供了面向对象编程方式和面向过程编程方式，而mysql则只可以面向过程。\r\n\r\n例如如下代码分别是mysqli的面向对象编程方式和面向过程方式\r\n\r\n面向对象方式\r\n\r\n面向对象方式PHP\r\n\r\n<?php\r\n$mysqli = new mysqli(\"localhost\", \"my_user\", \"my_password\", \"world\");\r\n\r\n/* check connection */ \r\nif (mysqli_connect_errno()) {\r\n    printf(\"Connect failed: %s\\n\", mysqli_connect_error());\r\n    exit();\r\n}\r\n\r\nprintf(\"Host information: %s\\n\", $mysqli->host_info);\r\n\r\n/* close connection */\r\n$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n<?php\r\n$mysqli = new mysqli(\"localhost\", \"my_user\", \"my_password\", \"world\");\r\n \r\n/* check connection */ \r\nif (mysqli_connect_errno()) {\r\n    printf(\"Connect failed: %s\\n\", mysqli_connect_error());\r\n    exit();\r\n}\r\n \r\nprintf(\"Host information: %s\\n\", $mysqli->host_info);\r\n \r\n/* close connection */\r\n$mysqli->close();\r\n?>\r\n面向过程方式\r\n\r\n面向过程方式PHP\r\n\r\n<?php\r\n$link = mysqli_connect(\"localhost\", \"my_user\", \"my_password\", \"world\");\r\n\r\n/* check connection */ \r\nif (!$link) {\r\n    printf(\"Connect failed: %s\\n\", mysqli_connect_error());\r\n    exit();\r\n}\r\n\r\nprintf(\"Host information: %s\\n\", mysqli_get_host_info($link));\r\n\r\n/* close connection */\r\nmysqli_close($link);\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n<?php\r\n$link = mysqli_connect(\"localhost\", \"my_user\", \"my_password\", \"world\");\r\n \r\n/* check connection */ \r\nif (!$link) {\r\n    printf(\"Connect failed: %s\\n\", mysqli_connect_error());\r\n    exit();\r\n}\r\n \r\nprintf(\"Host information: %s\\n\", mysqli_get_host_info($link));\r\n \r\n/* close connection */\r\nmysqli_close($link);\r\n?>\r\n（4）mysqli 可以通过预处理语句来减少开销和SQL注入的风险，而mysql则做不到。\r\n\r\n综上所述，如果大家用的是PHP5，而且mysql版本在5.0以上，希望大家以后能用mysqli的就尽量使用mqsqli，不仅高效，而且更安全，而且推荐大家使用面向对象编程方式。\r\n\r\n在这里，我们也只介绍面向对象编程方式。\r\n\r\n函数使用\r\n\r\n 1. 连接数据库并获取相关信息\r\n\r\nPHP\r\n\r\n<?php\r\n	$mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"mysql\");\r\n	//如果连接错误\r\n	if(mysqli_connect_errno()){\r\n		echo \"连接数据库失败：\".mysqli_connect_error();\r\n		$mysqli=null;\r\n		exit;\r\n	}\r\n	//获取当前字符集\r\n	echo $mysqli->character_set_name().\"<br>\";\r\n	//获取客户端信息\r\n	echo $mysqli->get_client_info().\"<br>\";\r\n	//获取mysql主机信息\r\n	echo $mysqli->host_info.\"<br>\";\r\n	//获取服务器信息\r\n	echo $mysqli->server_info.\"<br>\";\r\n	//获取服务器版本\r\n	echo $mysqli->server_version.\"<br>\";\r\n	//关闭数据库连接\r\n	$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n<?php\r\n    $mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"mysql\");\r\n    //如果连接错误\r\n    if(mysqli_connect_errno()){\r\n        echo \"连接数据库失败：\".mysqli_connect_error();\r\n        $mysqli=null;\r\n        exit;\r\n    }\r\n    //获取当前字符集\r\n    echo $mysqli->character_set_name().\"<br>\";\r\n    //获取客户端信息\r\n    echo $mysqli->get_client_info().\"<br>\";\r\n    //获取mysql主机信息\r\n    echo $mysqli->host_info.\"<br>\";\r\n    //获取服务器信息\r\n    echo $mysqli->server_info.\"<br>\";\r\n    //获取服务器版本\r\n    echo $mysqli->server_version.\"<br>\";\r\n    //关闭数据库连接\r\n    $mysqli->close();\r\n?>\r\n如果连接成功则运行结果\r\n\r\nlatin1\r\nmysqlnd 5.0.10 – 20111026 – Id:e707c415db32080b3752b232487a435ee0372157\r\nlocalhost via TCP/IP\r\n5.6.12-log\r\n50612\r\n如果连接失败则可能结果为\r\n\r\n连接数据库失败：Access denied for user ‘root’@’localhost’ (using password: YES)\r\n连接数据库失败：Unknown database ‘hello’\r\n2.查询数据\r\n\r\nPHP\r\n\r\n<?php\r\n	$mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n	//如果连接错误\r\n	if(mysqli_connect_errno()){\r\n		echo \"连接数据库失败：\".mysqli_connect_error();\r\n		$mysqli=null;\r\n		exit;\r\n	}\r\n	//构造SQL语句\r\n	$query = \"SELECT * FROM  designer order by ID LIMIT 3\";\r\n	//执行SQL语句\r\n	$result = $mysqli->query($query);\r\n	//遍历结果\r\n	while($row = $result->fetch_array(MYSQLI_BOTH)){\r\n		echo \"id\".$row[\'id\'].\"<br>\";\r\n	}\r\n	//释放结果集\r\n	$result->free();\r\n	//关闭数据库连接\r\n	$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n<?php\r\n    $mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n    //如果连接错误\r\n    if(mysqli_connect_errno()){\r\n        echo \"连接数据库失败：\".mysqli_connect_error();\r\n        $mysqli=null;\r\n        exit;\r\n    }\r\n    //构造SQL语句\r\n    $query = \"SELECT * FROM  designer order by ID LIMIT 3\";\r\n    //执行SQL语句\r\n    $result = $mysqli->query($query);\r\n    //遍历结果\r\n    while($row = $result->fetch_array(MYSQLI_BOTH)){\r\n        echo \"id\".$row[\'id\'].\"<br>\";\r\n    }\r\n    //释放结果集\r\n    $result->free();\r\n    //关闭数据库连接\r\n    $mysqli->close();\r\n?>\r\n运行结果\r\n\r\n\r\nid10062\r\nid10063\r\nid10064\r\n1\r\n2\r\n3\r\nid10062\r\nid10063\r\nid10064\r\n在这里需要注意的是\r\n\r\nPHP\r\n\r\nfetch_array(MYSQLI_BOTH)\r\n1\r\nfetch_array(MYSQLI_BOTH)\r\n这个方法，参数有三个，分别是 MYSQLI_BOTH，MYSQLI_NUM，MYSQLI_ASSOC。\r\n\r\n如果参数传入了 MYSQLI_BOTH，返回数组的索引既包括数字和名称。\r\n\r\n\r\narray (size=26)\r\n  0 => string \'10062\' (length=5)\r\n  \'id\' => string \'10062\' (length=5)\r\n  1 => string \'??\' (length=2)\r\n  \'name\' => string \'??\' (length=2)\r\n  2 => string \'1016903103@qq.com\' (length=17)\r\n  \'email\' => string \'1016903103@qq.com\' (length=17)\r\n  3 => string \'18366119732\' (length=11)\r\n  \'phone\' => string \'18366119732\' (length=11)\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\narray (size=26)\r\n  0 => string \'10062\' (length=5)\r\n  \'id\' => string \'10062\' (length=5)\r\n  1 => string \'??\' (length=2)\r\n  \'name\' => string \'??\' (length=2)\r\n  2 => string \'1016903103@qq.com\' (length=17)\r\n  \'email\' => string \'1016903103@qq.com\' (length=17)\r\n  3 => string \'18366119732\' (length=11)\r\n  \'phone\' => string \'18366119732\' (length=11)\r\n如果参数传入了 MYSQLI_NUM，返回数组的索引只包含数字。\r\n\r\n\r\narray (size=13)\r\n  0 => string \'10062\' (length=5)\r\n  1 => string \'??\' (length=2)\r\n  2 => string \'1016903103@qq.com\' (length=17)\r\n  3 => string \'18366119732\' (length=11)\r\n1\r\n2\r\n3\r\n4\r\n5\r\narray (size=13)\r\n  0 => string \'10062\' (length=5)\r\n  1 => string \'??\' (length=2)\r\n  2 => string \'1016903103@qq.com\' (length=17)\r\n  3 => string \'18366119732\' (length=11)\r\n如果参数传入了 MYSQLI_BOTH，返回数组的索引只包含名称。\r\n\r\n\r\narray (size=13)\r\n  \'id\' => string \'10062\' (length=5)\r\n  \'name\' => string \'??\' (length=2)\r\n  \'email\' => string \'1016903103@qq.com\' (length=17)\r\n  \'phone\' => string \'18366119732\' (length=11)\r\n1\r\n2\r\n3\r\n4\r\n5\r\narray (size=13)\r\n  \'id\' => string \'10062\' (length=5)\r\n  \'name\' => string \'??\' (length=2)\r\n  \'email\' => string \'1016903103@qq.com\' (length=17)\r\n  \'phone\' => string \'18366119732\' (length=11)\r\n其实还有等价的方法 fetch_row()，fetch_assoc()\r\n\r\n他们之间的关系如下\r\n\r\nresult−>fetchrow()=mysqlfetchrow()=result->fetch_array(MYSQLI_NUM) = mysql_fetch_array(MYSQLI_NUM)  返回索引数组\r\nresult−>fetchassoc()=mysqlfetchassoc()=result->fetch_array(MYSQLI_ASSOC) = mysql_fetch_array(MYSQLI_ASSOC)  返回索引列名\r\n如果 fetch_array()方法什么也不传，则默认传入了 MYSQLI_BOTH\r\n\r\n3.插入数据\r\n\r\nPHP\r\n\r\n<?php\r\n	$mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n	//如果连接错误\r\n	if(mysqli_connect_errno()){\r\n		echo \"连接数据库失败：\".mysqli_connect_error();\r\n		$mysqli=null;\r\n		exit;\r\n	}\r\n	//插入数据\r\n	$sql=\"insert into designer(name,phone) values(\'hello\',\'18352682923\')\";\r\n	//执行插入语句\r\n	$result=$mysqli->query($sql);\r\n	//如果执行错误\r\n	if(!$result){\r\n		echo \"SQL语句有误<br>\";\r\n		echo \"ERROR:\".$mysqli->errno.\"|\".$mysqli->error;\r\n		exit;	\r\n	}\r\n	//如果插入成功，则返回影响的行数\r\n	echo $mysqli->affected_rows;\r\n	//关闭数据库连接\r\n	$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n<?php\r\n    $mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n    //如果连接错误\r\n    if(mysqli_connect_errno()){\r\n        echo \"连接数据库失败：\".mysqli_connect_error();\r\n        $mysqli=null;\r\n        exit;\r\n    }\r\n    //插入数据\r\n    $sql=\"insert into designer(name,phone) values(\'hello\',\'18352682923\')\";\r\n    //执行插入语句\r\n    $result=$mysqli->query($sql);\r\n    //如果执行错误\r\n    if(!$result){\r\n        echo \"SQL语句有误<br>\";\r\n        echo \"ERROR:\".$mysqli->errno.\"|\".$mysqli->error;\r\n        exit;    \r\n    }\r\n    //如果插入成功，则返回影响的行数\r\n    echo $mysqli->affected_rows;\r\n    //关闭数据库连接\r\n    $mysqli->close();\r\n?>\r\n如果插入成功，那么结果则会是1，如果失败，则会报出错误。\r\n\r\n4.修改内容\r\n\r\nPHP\r\n\r\n<?php\r\n	$mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n	//如果连接错误\r\n	if(mysqli_connect_errno()){\r\n		echo \"连接数据库失败：\".mysqli_connect_error();\r\n		$mysqli=null;\r\n		exit;\r\n	}\r\n	//插入数据\r\n	$sql=\"update designer set name = \'hello\' where id = 10062\";\r\n	//执行插入语句\r\n	$result=$mysqli->query($sql);\r\n	//如果执行错误\r\n	if(!$result){\r\n		echo \"SQL语句有误<br>\";\r\n		echo \"ERROR:\".$mysqli->errno.\"|\".$mysqli->error;\r\n		exit;	\r\n	}\r\n	//如果插入成功，则返回影响的行数\r\n	echo $mysqli->affected_rows;\r\n	//关闭数据库连接\r\n	$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n<?php\r\n    $mysqli=@new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n    //如果连接错误\r\n    if(mysqli_connect_errno()){\r\n        echo \"连接数据库失败：\".mysqli_connect_error();\r\n        $mysqli=null;\r\n        exit;\r\n    }\r\n    //插入数据\r\n    $sql=\"update designer set name = \'hello\' where id = 10062\";\r\n    //执行插入语句\r\n    $result=$mysqli->query($sql);\r\n    //如果执行错误\r\n    if(!$result){\r\n        echo \"SQL语句有误<br>\";\r\n        echo \"ERROR:\".$mysqli->errno.\"|\".$mysqli->error;\r\n        exit;    \r\n    }\r\n    //如果插入成功，则返回影响的行数\r\n    echo $mysqli->affected_rows;\r\n    //关闭数据库连接\r\n    $mysqli->close();\r\n?>\r\n如果修改成功，同样返回被修改的行数。\r\n\r\n5.预处理语句\r\n\r\nPHP\r\n\r\n<?php\r\n	$mysqli = @new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n	//如果连接错误\r\n	if(mysqli_connect_errno()){\r\n		echo \"连接数据库失败：\".mysqli_connect_error();\r\n		$mysqli=null;\r\n		exit;\r\n	}\r\n	//准备好一条语句放到服务器中，插入语句\r\n	$sql = \"insert into designer(name, email) values(?, ?)\";\r\n	//生成预处理语句\r\n	$stmt = $mysqli->prepare($sql);\r\n	//给占位符号每个?号传值（绑定参数） i  d  s  b，第一个参数为格式化字符，ss代表两个字符串，d代表数字\r\n	$stmt->bind_param(\"ss\", $name, $email);\r\n	//为变量赋值\r\n	$name = \"Mike\";\r\n	$email = \"mike@live.cn\";\r\n	//执行\r\n	$stmt->execute();\r\n	//为变量赋值\r\n	$name = \"Larry\";\r\n	$email = \"larry@live.cn\";\r\n	//执行\r\n	$stmt->execute();\r\n	//最后输出\r\n	echo \"最后ID\".$stmt->insert_id.\"<br>\";\r\n	echo \"影响了\".$stmt->affected_rows.\"行<br>\";\r\n	//关闭数据库连接\r\n	$mysqli->close();\r\n?>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n25\r\n26\r\n27\r\n28\r\n29\r\n30\r\n<?php\r\n    $mysqli = @new mysqli(\"localhost\", \"root\", \"\", \"design\");\r\n    //如果连接错误\r\n    if(mysqli_connect_errno()){\r\n        echo \"连接数据库失败：\".mysqli_connect_error();\r\n        $mysqli=null;\r\n        exit;\r\n    }\r\n    //准备好一条语句放到服务器中，插入语句\r\n    $sql = \"insert into designer(name, email) values(?, ?)\";\r\n    //生成预处理语句\r\n    $stmt = $mysqli->prepare($sql);\r\n    //给占位符号每个?号传值（绑定参数） i  d  s  b，第一个参数为格式化字符，ss代表两个字符串，d代表数字\r\n    $stmt->bind_param(\"ss\", $name, $email);\r\n    //为变量赋值\r\n    $name = \"Mike\";\r\n    $email = \"mike@live.cn\";\r\n    //执行\r\n    $stmt->execute();\r\n    //为变量赋值\r\n    $name = \"Larry\";\r\n    $email = \"larry@live.cn\";\r\n    //执行\r\n    $stmt->execute();\r\n    //最后输出\r\n    echo \"最后ID\".$stmt->insert_id.\"<br>\";\r\n    echo \"影响了\".$stmt->affected_rows.\"行<br>\";\r\n    //关闭数据库连接\r\n    $mysqli->close();\r\n?>\r\n通过以上的预处理语句，我们也可以实现数据插入。\r\n\r\n那么预处理语句有什么特点呢？\r\n\r\n1. 效率上更高， 就是如果执行多次相同的语句，只有语句数据不同， 因为将一条语句在服务器端准备好，然后将不同的值传给服务器，再让这条语句执行。相当于编译一次，使用多次。\r\n2. 安全上：可以防止SQL注入（? 占位）这样就可以防止非正常的变量的注入。\r\n所以，推荐大家使用mysqli的预处理语句的方式，不仅效率高，而且更加安全。', null, null, '1');
INSERT INTO `blog_detail` VALUES ('5', '2', '1', 'JS入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('6', '3', '1', 'JS入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('7', '1', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('8', '1', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('9', '1', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('10', '2', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('11', '2', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('12', '3', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('13', '3', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('14', '3', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');
INSERT INTO `blog_detail` VALUES ('15', '2', '1', 'PHP入门心得', '谈一下自己在入门PHP时的感想，以及简单的学习方法', '我想简单介绍一下新入门php的感受.\r\n\r\nphp开发以简单快捷著称;学它做项目比java要快(3天就可以入门);\r\n\r\n但我认为php简单的是外表;其实它的功能非常强大;要学精恐怕须多做几年的实战项目才干敢自称呢.\r\n\r\nphp也有架构(但没有java强);也有连接池;不过比较麻烦.\r\n\r\n下面简单介绍一下PHP的语法。(和java对比;我会用程序说明比较直观)\r\n\r\n1、嵌入方法：\r\n\r\n类似JSP的<%，PHP可以是<?php或者是<?，结束符号是?>。\r\n\r\n2、引用文件：\r\n\r\n引用文件的方法有两种：require 及 include。(最好用require_once和include_once;效率会略高)\r\n\r\nrequire 的使用方法如 require(\"test.php\"); 。这个函数通常放在 PHP 程序的最前面，\r\n\r\nPHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。\r\n\r\n常用的函数，亦可以这个方法将它引入网页中。\r\n\r\ninclude 使用方法如 include(\"test.php\"); 。这个函数一般是放在流程控制的处理部分中。\r\n\r\nPHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。\r\n\r\n3、注释方法：\r\n\r\n和java一样; 3种(1:/**abc */ 2:/*abc */ 3://abc)\r\n\r\n4、变量类型：\r\n\r\n$str = \"test\" ;\r\n\r\n$int1 = 66;\r\n\r\n$float1 = 1.653 ;\r\n\r\n$float2 = 1.3E+5 ;\r\n\r\n$array1 = array( \"甲\" , \"乙\" , \"丙\" , \"丁\" );\r\n\r\n这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。\r\n\r\n5. php输出方法:\r\n\r\n以下有3种方法输出:\r\n\r\necho\r\n\r\nprintf 却一定要有圆括号;用来格式化数字的输出。可以把一个数作为整数，或者用科学计数法显示出来。\r\n\r\nprint 可有可无圆括号\r\n\r\n你可以用“,”号来分隔多个要显示得内容;包括变量.字符.数字.函数等类型.\r\n\r\n可以用iconv(\'gb2312\', \'utf-8\', $response)来把gb2312的字符转成utf-8的字符输出.\r\n\r\nphp退出函数用\"exit\";java用\"return\".\r\n\r\n6.了解php的系统信息方法:\r\n\r\n以下可以看到php的系统变量:\r\n\r\n<?php\r\n\r\necho \"<pre>\";\r\n\r\nprint_r($GLOBALS);\r\n\r\n?>\r\n\r\n举例:可以查到远程访问的ip\r\n\r\n<?php echo $_SERVER[\"REMOTE_ADDR\"];?>\r\n\r\n以下可以看到php的系统环境:\r\n\r\n<? php echo phpinfo(); ?>\r\n\r\n7.数据库编程:\r\n\r\n<?php\r\n\r\n//数据库连接 3个参数 ip, 用户, 密码\r\n\r\n$conn=mysql_connect(\"127.0.0.1\", \"test\", \"test\");\r\n\r\n//选择名为\"mysee\"数据库\r\n\r\nmysql_select_db(\"mysee\");\r\n\r\n//执行sql语句;得到输出结果$result\r\n\r\n$result = mysql_query(\"select channel_name, channel_url from live_channel where isactive=1\");\r\n\r\n$response=\"{\";\r\n\r\n$i=0;\r\n\r\n//循环得到$result的单记录行值$row\r\n\r\nwhile($row = mysql_fetch_array($result)) {\r\n\r\n//注意:php字符相加用\'.\'和java不一样(java用\'+\'); $row[\"channel_name\"]可以行记录的字段名\'channel_name\'的值\r\n\r\n$response .= \"\'\".$i.\"\':[\'\".$row[\"channel_name\"].\"\', \'\".$row[\"channel_url\"].\"\'],\";\r\n\r\n$i++;\r\n\r\n}', null, null, '1');

-- ----------------------------
-- Table structure for blog_user
-- ----------------------------
DROP TABLE IF EXISTS `blog_user`;
CREATE TABLE `blog_user` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `user_name` varchar(10) DEFAULT NULL,
  `password` int(10) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `advanced` int(1) DEFAULT '0',
  `login_last_time` int(10) DEFAULT NULL,
  `login_times` int(10) DEFAULT NULL,
  `status` int(1) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_user
-- ----------------------------
INSERT INTO `blog_user` VALUES ('1', 'gfw', '123123', '1026061361@qq.com', '0', '1521300489', '14', '1');
INSERT INTO `blog_user` VALUES ('2', 'lmc', '123123', '2473238658@qq.com', '0', '1521288658', '4', '1');
INSERT INTO `blog_user` VALUES ('3', 'jeremy', '123123', '1148365540@qq.com', '0', null, null, '1');
INSERT INTO `blog_user` VALUES ('4', 'barry', '132123', 'barry_g@163.com', '0', '1521295586', '1', '1');
INSERT INTO `blog_user` VALUES ('5', 'emrys', '123123', 'emrys@163.com', '0', '1521292422', '1', '1');
